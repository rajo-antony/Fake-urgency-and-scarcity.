import requests
from bs4 import BeautifulSoup

def detect_deceptive_tactics(url):
    # Send an HTTP request to the URL and parse the HTML content
    response = requests.get(url)
    soup = BeautifulSoup(response.content, 'html.parser')

    # Define a list of suspicious elements and classes commonly associated with deceptive tactics
    suspicious_elements = [
        {'element': 'div', 'class_name': 'timer'},
        {'element': 'span', 'class_name': 'stock-level'},
        # Add more elements and classes as needed
    ]

    # Initialize an empty list to store the suspicious elements found
    detected_elements = []

    # Iterate through the suspicious elements and search for them in the HTML content
    for element in suspicious_elements:
        elements = soup.find_all(element['element'], class_=element['class_name'])
        if elements:
            detected_elements.append({
                'element': element['element'],
                'class_name': element['class_name'],
                'count': len(elements),
                'elements': elements
            })

    # Return the list of detected suspicious elements
    return detected_elements

def main():
    # Get the URL from the user
    url = input("Enter the URL of the e-commerce website: ")

    # Detect deceptive tactics on the website
    detected_elements = detect_deceptive_tactics(url)

    # Print the results
    if detected_elements:
        print("\nThe following suspicious elements were detected:")
        for element in detected_elements:
            print(f"- {element['element']} with class name '{element['class_name']}' was found {element['count']} times.")
            for e in element['elements']:
                print(f"  {e}")
    else:
        print("No suspicious elements were detected.")

if __name__ == '__main__':
    main()
